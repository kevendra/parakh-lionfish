
// A set of useful SASS mixins

/* ************************************ common mixins ************************************ */
//Some of the mixins below are already included in the Compass library,
// More info at: http://zerosixthree.se/8-sass-mixins-you-must-have-in-your-toolbox/
// 1. Set a rem font size with pixel fallback
@function calculateRem($size) {
  $remSize: $size / 16px;
  @return $remSize * 1rem;
}

@mixin font-size($size) {
  font-size: $size;
  font-size: calculateRem($size);
}
/*
Usage: 
p {
  @include font-size(14px)
}
Output:
p {
  font-size: 14px; //Will be overridden if browser supports rem
  font-size: 0.8rem;
}
*/

// 2. Breakpoints
@mixin bp-large {
  @media only screen and (max-width: 60em) {
    @content;
  }
}
@mixin bp-medium {
  @media only screen and (max-width: 40em) {
    @content;
  }
}
@mixin bp-small {
  @media only screen and (max-width: 30em) {
    @content;
  }
}
/*
Usage:
.sidebar {
  width: 60%
  float: left;
  margin: 0 2% 0 0;
  @include bp-small {
    width: 100%;
    float: none;
    margin: 0;
  }
}
Output:
.sidebar {
  width: 60%
  float: left;
  margin: 0 2% 0 0;
  @media only screen and (max-width: 30){
    .sidebar{width: 100%; float: none; margin: 0;}
  }
}
*/

// 3. SVG background images with PNG and retina fallback
$image-path: '../images' !default;
$fallback-extension: 'png' !default;
$retina-suffix: '@2x';
@mixin background-image($name, $size:false){
    background-image: url(#{$image-path}/#{$name}.svg);
    @if($size){
        background-size: $size;
    }
    .no-svg &{
        background-image: url(#{$image-path}/#{$name}.#{$fallback-extension});

        @media only screen and (-moz-min-device-pixel-ratio: 1.5), only screen and (-o-min-device-pixel-ratio: 3/2), only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min-device-pixel-ratio: 1.5) {
          background-image: url(#{$image-path}/#{$name}#{$retina-suffix}.#{$fallback-extension});
        }
    }
}
/*
All in all you need this:
pattern.svg
pattern.png
pattern@2x.png

Usage
body {
  @include background-image('pattern');
}
*/


// 4. Animations and keyframes
@mixin keyframes($animation-name) {
  @-webkit-keyframes $animation-name {
    @content;
  }
  @-moz-keyframes $animation-name {
    @content;
  }  
  @-ms-keyframes $animation-name {
    @content;
  }
  @-o-keyframes $animation-name {
    @content;
  }  
  @keyframes $animation-name {
    @content;
  }
}
@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};      
}
/*
Usage
@include keyframes(slide-down) {
  0% { opacity: 1; }
  90% { opacity: 0; }
}

.element {
  width: 100px;
  height: 100px;
  background: black;
  @include animation('slide-down 5s 3');
}
*/

// 5. Transitions
@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}
/*
Usage
a {
  color: gray;
  @include transition(color .3s ease);
  &:hover {
    color: black;
  }
}
*/

// 6. Cross browser opacity
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}
/*
Usage
.faded-text {
  @include opacity(0.8);
}
*/

// 7. Clearfix
%clearfix {
  *zoom: 1;
  &:before, &:after {
    content: " ";
    display: table;
  }
  &:after {
    clear: both;
  }
}
/*
Usage
.container-with-floated-children {
  @extend %clearfix;
}
*/

// 8. Visually hide an element
%visuallyhidden {
  margin: -1px;
  padding: 0;
  width: 1px;
  height: 1px;
  overflow: hidden;
  clip: rect(0 0 0 0);
  clip: rect(0, 0, 0, 0);
  position: absolute;
}
/*
Usage
<button class="mobile-navigation-trigger">
  <b class="visually-hidden">Open the navigation</b>
  <img src="img/mobile-navigation-icon.svg">
</button>
.visually-hidden {
  @extend %visuallyhidden;
}
*/

//For floating elements
@mixin clearfix {
    &:before,
    &:after {
        display: table;
        content: " ";
    }
    &:after {
        clear: both;
    }
}
@mixin placeholder {
  &::-webkit-input-placeholder {@content}
  &:-moz-placeholder           {@content}
  &::-moz-placeholder          {@content}
  &:-ms-input-placeholder      {@content}  
}
/*
Usage
input{
@include placeholder {
    font-style:italic;
    font-size: 11px;
  }
}
*/
//Transform function that rotates eements
@mixin transform($degree) {
    transform:rotate($degree);
    -ms-transform:rotate($degree); /* IE 9 */
    -webkit-transform:rotate($degree); /* Safari and Chrome */
}
