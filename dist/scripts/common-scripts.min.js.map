{"version":3,"sources":["plugin/analytic-service.js","plugin/asset-service.js","plugin/camera-service.js","plugin/file-service.js","plugin/media-service.js","plugin/notification-service.js","plugin/sqlite-service.js","config/app.js","config/i18n.js","config/interceptor.js","config/router.js","config/sanitizer.js","share-directive/alert-message-directive.js","share-directive/prk-menu-right-directive.js","share-directive/prk-photo-directive.js","share-controller/authentication-controller.js","share-controller/main-controller.js","share-controller/rate-share-controller.js","share-controller/version-controller.js","share-service/app-data-service.js","share-service/app-data-sql-service.js","share-service/authentication-service.js","share-service/global-data-service.js","share-service/main-service.js","share-service/network-status-service.js","share-service/registration-service.js","share-service/setup-service.js","share-service/sql-service.js","share-service/storage-service.js","share-service/util-service.js","share-service/value-service.js"],"names":["angular","module","_SERVICES_","factory","$q","$cordovaGoogleAnalytics","$ionicAnalytics","ENV","VAL","initializationIonicAnalytics","register","initializationGoogleAnalytics","console","log","isDevice","setUserId","device","id","startTrackerWithId","gaTrackerId","initialize","deferred","defer","analyticOnIonic","analyticOnGoogle","resolve","promise","trackView","stateName","track","$http","$cordovaFile","$cordovaFileTransfer","API","AssetSqlService","assetUploadUrl","get","ASSET_UPLOAD_HANDLER_PROFILE","assetDelete","blobKey","config","params","blob-key","ASSET_DELETE","assetServe","ASSET_SERVE","assetUrl","dir","targetFilePath","dirPath","cordova","file","externalDataDirectory","getAsset","then","asset","fileName","checkFile","reject","undefined","Date","getTime","downloadUrl","options","trustHosts","download","result","saveAsset","err","getPicture","q","navigator","camera","createDir","replace","image","audio","video","promises","all","$cordovaMedia","media","mediaUrl","mediaUrlOnline","iOSPlayOptions","numberOfLoops","playAudioWhenScreenIsLocked","getMediaURL","uri","os","android","mediaError","e","JSON","stringify","play","stop","ios","src","newMedia","playOnline","pause","release","$rootScope","$ionicPush","EVENT","RegistrationService","tokenReceived","token","pushNotificationRegistration","init","debug","canShowAlert","canSetBadge","canPlaySound","canRunActionsOnWake","onNotification","notification","payload","appName","$broadcast","RELOAD_ACTIVITY_STATUS","RELOAD_CAR_STATUS","onRegister","data","pluginConfig","alert","badge","sound","clearBadge","iconColor","openDB","dbName","db","isCordova","window","dbRootObject","sqlitePlugin","openDatabase","name","location","DEFAULT_SIZE","openDBBackground","bgType","execute","query","binding","transaction","tx","executeSql","error","nestedExecute","query1","query2","binding1","binding2","res","_APP_","_CONTROLLERS_","_DIRECTIVES_","_FILTERS_","_MODULES_","_CONFIG_","_SQLITE_","customerApp","getOSVersion","ionic","Platform","isIOS","isAndroid","isWindowsPhone","win","run","$ionicPlatform","$ionicHistory","$state","$ionicCoreSettings","$cordovaDevice","$cordovaAppVersion","$cordovaNetwork","VALEXT","SqlService","SetupService","NetworkStatusService","NotificationService","AnalyticService","FileService","rootUi","copy","emptyRootUi","ready","appId","alertOfflineNetworkStatus","getVersionNumber","version","verName","getVersionCode","build","verCode","getUUID","osVer","getVersion","plugins","Keyboard","hideKeyboardAccessoryBar","disableScroll","StatusBar","styleDefault","onCreate","beforeAll","$on","RELOAD_APP","event","toState","toParams","fromState","fromParams","state","indexOf","updateUiState","registerBackButtonAction","$viewHistory","backView","currentStateName","landing","app","exitApp","go","$translateProvider","useStaticFilesLoader","prefix","suffix","preferredLanguage","$httpProvider","$provide","isServerCall","url","BASE","GlobalDataService","request","showSpinner","response","when","responseError","String","prototype","startsWith","str","this","addMsg","msg","$location","rejection","status","path","signIn","user","showSignInFailureMessage","defaults","headers","common","interceptors","push","$ionicConfigProvider","$stateProvider","$urlRouterProvider","otherwise","templateUrl","directive","restrict","scope","messages","link","iElement","iAttrs","closeable","controller","AssetService","getPhotoUrl","photoUrl","placeholderClass","template","$watch","$scope","AuthenticationService","UtilService","AppDataService","emptyModel","username","password","model","signin","tokenHeaderName","appData","appDataTypeTOKEN","value","saveAppDataLocal","getSTAppData","settingAppData","val","theme","lang","uiState","appDataDto","emptyAppDataDto","uid","claim","type","appDataTypeST","saveAppData","signout","ONLINE_STATE_CHANGE","resetPassword","staus","$timeout","MainService","socket","broadcast","initSocket","onopen","onmessage","message","jsonData","parse","onerror","onclose","openChannel","getToken","channel","goog","appengine","Channel","open","$window","emptyUi","reset","ui","share","website","initRateShare","checkFacebookApp","url1","url2","callback","schemeOrPackage","appAvailability","check","openUrl","openWeb","openAppStore","appStoreUrl","openPlayStore","appPackageName","openFacebook","fbPageId","fbPageUrl","versionCode","initVersion","AppDataSqlService","getEmptyIfSTAppDataNull","emptySTAppData","getAppData","post","SETTING","SqLite","getAppDataParsed","results","resultAppData","rows","item","$sanitize","sanitizeCredentials","credentials","Content-Type","SIGNIN","updateVALAndHeaders","SIGNOUT","working","addMessage","text","title","param","messageVal","isWorking","resetWorking","isPartnerApp","deviceId","uuid","CHANNEL_TOKEN","$ionicPopup","showNetworkStatusAlert","isOffline","confirmPopup","deviceRegistration","deviceModel","DEVICE","tokenModel","SEPARATOR","active","PUSH_NOTIFICATION","AppDataExtService","AppUpdateService","goToLastUiState","viewHistory","currentView","APP_LAUNCH","updateNavigation","navigation","getTokenAndUpdateVAL","firstLaunchForRegisteredUser","index","activeSiteId","activeAreaId","saveCustomSetting","firstLaunch","welcome","applyUpdatesOnVersionChanged","todoPromise","appDataPromise","assetPromise","dropAll","onUpgrade","key","sessionStorage","getItem","set","setItem","unset","removeItem","localStorage","getUserClaimData","split","atob","Authorization","isNotNull","addSpaceInBetweenText","spaceAfter","retValue","i","length","charAt","emptyDeleteEntityAppData","deleteEntityAppData","isEmptyObjectNew","obj","Object","keys","isEmptyObject","prop","hasOwnProperty","sum","a","b","parseInt","unique","arr"],"mappings":"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","file":"common-scripts.min.js","sourcesContent":["'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'AnalyticService', function ( $q, $cordovaGoogleAnalytics, $ionicAnalytics, ENV, VAL ) {\n    var initializationIonicAnalytics = function () {\n      // Add this inside your $ionicPlatform.ready function that is defined inside the run function:\n      $ionicAnalytics.register();\n    };\n    var initializationGoogleAnalytics = function () {\n      console.log( 'initialization - Google Analytics Plugin :' );\n      //initialization - Google Analytics Plugin\n      if ( VAL.isDevice ) { //typeof analytics add module //'angulartics.google.analytics.cordova'\n        $cordovaGoogleAnalytics.setUserId( VAL.device.id ); //create unique session to track\n        $cordovaGoogleAnalytics.startTrackerWithId( ENV.gaTrackerId );\n      } else {\n        //it won't exist for platforms other than iOS and Android\n        console.log( 'Google Analytics Unavailable' );\n      }\n    };\n\n    return {\n      initialize: function () {\n        var deferred = $q.defer();\n        if ( ENV.analyticOnIonic ) {\n          initializationIonicAnalytics();\n        }\n        if ( ENV.analyticOnGoogle ) {\n          initializationGoogleAnalytics();\n        }\n        deferred.resolve( 'all done!' );\n        return deferred.promise; //promise\n      },\n      trackView: function ( stateName ) {\n        if ( VAL.isDevice ) {\n          if ( ENV.analyticOnIonic ) {\n            $ionicAnalytics.track( stateName );\n          }\n          if ( ENV.analyticOnGoogle ) {\n            $cordovaGoogleAnalytics.trackView( stateName );\n          }\n        }\n      }\n    }; //end return\n  } ); //end\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('AssetService', function($http, $q, $cordovaFile, $cordovaFileTransfer, API, VAL, AssetSqlService) {\n\n/*\nGET /api/profile/asset-upload-url.json\nPOST /api/profile/asset-upload\nDELETE /api/profile/asset-delete.json?blob-key= blobKey\nGET /api/asset/asset-serve?blob-key=\n\nASSET_UPLOAD_HANDLER_PROFILE:   PROFILE  + 'asset-upload-url.json',\nASSET_UPLOAD                :   PROFILE  + 'asset-upload',\nASSET_DELETE                :   PROFILE  + 'asset-delete.json',\nASSET_SERVE                 :   ASSET  + 'asset-serve',\n*/\n  return {\n\n    assetUploadUrl: function(){\n      return $http.get(API.ASSET_UPLOAD_HANDLER_PROFILE);\n    },\n    assetDelete: function(blobKey){\n      var config = {params : {'blob-key': blobKey}};\n      return $http.delete(API.ASSET_DELETE, config);\n    },\n    assetServe: function(blobKey){\n      var config = {params : {'blob-key': blobKey}};\n      return $http.get(API.ASSET_SERVE, config);\n    },\n    // assetUpload: function(blobKey){\n    //   var config = {params : {'blobKey': blobKey}};\n    //   return $http.delete(API.ASSET_UPLOAD);\n    // },\n\n    /*\n      dir - image audio video\n    */\n    assetUrl: function(blobKey, dir){\n      var deferred = $q.defer();\n\n      if(blobKey){\n\n        var targetFilePath;\n        var dirPath = cordova.file.externalDataDirectory + dir +'/';\n        AssetSqlService.getAsset().then(function(asset){//SELECT * FROM asset\n          console.log('asset :', asset);\n\n          if(asset && VAL.isDevice){\n            console.log('asset id and fileName ', asset.id, asset.fileName);\n\n            //check file exist\n             $cordovaFile.checkFile(dirPath, asset.fileName)\n              .then(function(){//success\n                targetFilePath = dirPath + asset.fileName;\n                deferred.resolve(targetFilePath);\n              }, function(){//error\n                //FIXME TODO or download if online\n                deferred.reject(undefined);\n              });\n          }else{\n            var fileName = (new Date()).getTime();\n\n            var downloadUrl = API.ASSET_SERVE + '?blob-key=' + blobKey;// ASSET_SERVE + \"?\" + BLOB_KEY + \"=\" + blobKey;\n            targetFilePath = dirPath + fileName;\n            var options = {};\n            var trustHosts = true;\n\n            console.log('targetFilePath ', targetFilePath);\n            //download\n            $cordovaFileTransfer.download(downloadUrl, targetFilePath, options, trustHosts)\n              .then(function(result) {\n                // Success!\n                console.log('Success ', result);\n                //save\n                var saveAsset = {};\n                saveAsset.id = blobKey;\n                saveAsset.fileName = fileName;\n                AssetSqlService.saveAsset(saveAsset);\n\n                deferred.resolve(targetFilePath);\n              }, function(err) {\n                // Error\n                console.log('Error ', err);\n                deferred.reject(undefined);\n              }, function(){//progress) {\n                // $timeout(function () {\n                //   $scope.downloadProgress = (progress.loaded / progress.total) * 100;\n                // });\n              });\n          }\n        });//end getAsset\n\n      }else{\n        console.log('blobKey is null', blobKey);\n        deferred.reject(undefined);\n      }\n\n      return deferred.promise;//promise\n    }\n\n  };//end return\n});//end AssetService\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('Camera', function($q) {\n\n  return {\n    getPicture: function(options) {\n      var q = $q.defer();\n\n      navigator.camera.getPicture(function(result) {\n        // Do any magic you need\n        q.resolve(result);\n      }, function(err) {\n        q.reject(err);\n      }, options);\n\n      return q.promise;\n    }\n  };\n\n});\n","/* global cordova */\n'use strict';\n\nangular.module(_SERVICES_)\n.factory('FileService', function($q, $cordovaFile, VAL) {\n\n  var createDir = function(){\n\n    var replace = false;//do not replace if it's there\n    /*\n      IMG-  AUD-  VID-  send\n      FileError {code: 12, message: \"PATH_EXISTS_ERR\"}\n    */\n    if(VAL.isDevice){\n      var image = $cordovaFile.createDir(cordova.file.externalDataDirectory, 'image', replace);\n      var audio = $cordovaFile.createDir(cordova.file.externalDataDirectory, 'audio', replace);\n      var video = $cordovaFile.createDir(cordova.file.externalDataDirectory, 'video', replace);\n      var promises = [image, audio, video];//videoPromise\n      return $q.all(promises);\n    }\n    var deferred = $q.defer();\n    deferred.resolve('all done!');\n    return deferred.promise;//promise\n  };\n\n  return {\n    createDir: function(){\n      return createDir();//promise\n    }\n  };//end return\n});//end\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('MediaService', function($cordovaMedia, ENV, VAL) {\n\n  var mediaUrl = 'public/media/samsung-whistle.mp3';\n  var mediaUrlOnline = 'http://web.bellme.xyz/' + mediaUrl;\n  var media;\n\n  var iOSPlayOptions = {\n    numberOfLoops: 1,\n    playAudioWhenScreenIsLocked : true\n  };\n\n  var getMediaURL = function(uri) {\n    if(VAL.os === ENV.os.android){//OR if(device.platform.toLowerCase() === \"android\"){\n      return '/android_asset/www/' + uri;\n    }\n    return uri;\n  };\n  var mediaError = function(e) {\n    console.log('Media Error', JSON.stringify(e));\n  };\n  var play = function(media) {\n    media.stop();//media play only once, second play need to stop first\n    if(VAL.os === ENV.os.ios){\n      media.play(iOSPlayOptions); // iOS only!\n    }else if(VAL.os === ENV.os.android){\n      //$cordovaMedia.play(media);\n      media.play(); // Android\n    }\n  };\n\n  /* ************************************ Public function/object ************************************ */\n\n  return {\n    play : function() {\n      var src = getMediaURL(mediaUrl);//MP3 file that is shipped with application\n      media = $cordovaMedia.newMedia(src, null, mediaError);\n      play(media);\n    },\n    playOnline : function() {\n      media = $cordovaMedia.newMedia(mediaUrlOnline, null, mediaError);\n      play(media);\n    },\n    pause : function() {\n      media.pause();\n    },\n    stop : function() {\n      media.stop();\n    },\n    release : function() {\n      media.release();\n    }\n  };//end return\n});//end\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'NotificationService', function ( $rootScope, $q, $ionicPush, ENV, EVENT, RegistrationService ) {\n    /*\n      var getEmptyIfSettingAppDataNull = function(settingAppData){//FIXME duplicate in setup-service\n        if( ! settingAppData){\n          //create settingAppData\n          settingAppData = {};\n          settingAppData.id = 'SETTING';\n          settingAppData.value = ENV.emptySettingAppData;\n          settingAppData.value.version = VAL.device.verName;\n        }\n        return settingAppData;\n      };\n      var updateNotificationStatusAndToken = function(token){\n        var deferred = $q.defer();\n        AppDataService.getSTAppData().then(function(settingAppData){\n          settingAppData = getEmptyIfSettingAppDataNull(settingAppData);\n          settingAppData.value.notification.token = token;\n          if(token){\n            settingAppData.value.notification.register = true;\n          }else{\n            //TODO unregister from serve\n            settingAppData.value.notification.register = false;\n          }\n          AppDataService.saveAppDataLocal(settingAppData).then(function(){\n            deferred.resolve('all done!');\n          });\n        });\n        return deferred.promise;//promise\n      };\n      */\n    var tokenReceived = function ( token ) {\n      RegistrationService.pushNotificationRegistration( token )\n        .then( function success() {\n          //save to local storage\n          //updateNotificationStatusAndToken(token); //TODO step 4 of below steps\n        } );\n      //1. The client app obtains a registration token using the Instance ID API.\n      //2. The client app passes the registration token to the app server.\n      //3. The app server saves the registration token and acknowledges to the client app that the process completed successfully.\n      //4. The client app should store a boolean value indicating whether the registration token has been sent to the server(web.parakh.me/api/..)\n    };\n\n    /*\n    depends on  Ionic.io();\n    Register with the Ionic Push service.  All parameters are optional.\n    */\n    /* for anonymous users we can use\n    1. generate a unique user.id\n    2. unique device ID (or application-specific ID on iOS)\n    */\n    /*\n  var getUser = function(){\n    // Set your user.id here, or generate a random one.\n    // Generate GUID\n    //user.id = $ionicUser.generateGUID();\n\n    // OR, user the device's Universally Unique Identifier (UUID).\n    // http://docs.phonegap.com/en/edge/cordova_device_device.md.html#device.uuid\n\n    // this will give you a fresh user or the previously saved 'current user'\n    var user = Ionic.User.current();\n\n    // if the user doesn't have an id, you'll need to give it one.\n    if( ! user.id){\n      user.id = VAL.uuid;//device.uuid\n    }\n    user.ionicGenUid = Ionic.User.anonymousId();//$ionicUser.generateGUID();\n    user.model = device.model;\n    user.platform = device.platform;\n    user.version = device.version;\n    user.cordova = device.cordova;\n    return user;\n  };\n*/\n    return {\n      /*\n      old DEPRECATED folder - com.phonegap.plugins.PushPlugin - PushNotification.js\n      @see https://github.com/phonegap-build/PushPlugin\n      cordova plugin add com.phonegap.plugins.PushPlugin\n      cordova plugin add https://github.com/phonegap-build/PushPlugin.git\n      com.phonegap.plugins.PushPlugin 2.5.0 'PushPlugin'\n\n      New folder - phonegap-plugin-push - push.js\n      @see https://github.com/phonegap/phonegap-plugin-push\n      cordova plugin add phonegap-plugin-push\n      cordova plugin add https://github.com/phonegap/phonegap-plugin-push.git\n      phonegap-plugin-push\n\n      Heads-up Notifications\n      Lock Screen Notifications setVisibility() VISIBILITY_PUBLIC\n\n      //notification types - iOS -\n      Banner - A banner is a small translucent view that appears onscreen and then disappears after a few seconds. +  can also define two actions\n      Alert - alert view that appears onscreen and requires user interaction to dismiss. can approve[launches your app (possibly in the background)] or deny\n      Badge - A badge is a small red oval that displays the number of pending notification items (a badge appears over the upper-right corner of an app’s icon)\n      Sound - The sound files can be in the main bundle of the client app or in the Library/Sounds folder of the app’s data container.\n        - package the audio data in an aiff, wav, or caf file and under 30 seconds when played.\n      */\n      initialize: function () {\n        console.log( 'initialize PushNotification' );\n        //var push = new Ionic.Push({ -OR- with Angular\n        $ionicPush.init( {\n          debug: false,\n          canShowAlert: true, //Can pushes show an alert on your screen?\n          canSetBadge: true, //Can pushes update app icon badges?\n          canPlaySound: true, //Can notifications play a sound?\n          canRunActionsOnWake: true, //Can run actions outside the app,\n          /*\n          \"onNotification\": This function will be called when your device receives a notification, and provided with the notification object received.\n          */\n          onNotification: function ( notification ) {\n            // Called for each notification.\n            // Handle new push notifications here\n            var payload = notification.payload;\n            console.log( 'onNotification log {} payload {}', notification, payload );\n            if ( ENV.appName === 'PARTNER' ) { //TODO broadcast event based on payload type\n              $rootScope.$broadcast( EVENT.RELOAD_ACTIVITY_STATUS );\n            } else {\n              $rootScope.$broadcast( EVENT.RELOAD_CAR_STATUS );\n            }\n            return true; //TODO turn on - off notification\n            //return false; //can be useful for 'silently' handling push notifications in some cases.\n          },\n          /*\n          \"onRegister\": This function will be called upon successful registration of your device, and provided with a data argument that contains a token string with your device token.\n          */\n          onRegister: function ( data ) {\n            // Additionally, if we wish to access device tokens inside app\n            // Handles incoming device tokens\n            console.log( '2. onRegister Device token will be data.token, data= ', data );\n            tokenReceived( data.token );\n          },\n          pluginConfig: {\n            ios: {\n              alert: true,\n              badge: true,\n              sound: true,\n              clearBadge: true\n            },\n            android: {\n              iconColor: '#FFFFFF'\n            }\n          }\n        } ); //end Push config - var push = new Ionic.Push\n\n        /*\n        This function will generate your device's token and register with GCM or APNS to receive push notifications\n        */\n        $ionicPush.register( function ( token ) {\n          //console.log(token);\n          console.log( '1. Device token will be token.token, token= ', token );\n\n        } );\n        /*\n              push.on('notification', function(data) {\n                // data.message,\n                // data.title,\n                // data.count,\n                // data.sound,\n                // data.image,\n                // data.additionalData\n                // Called for each notification.\n                // Handle new push notifications here\n                console.log('XXXXXXXXX notification log {}', notification);\n                $rootScope.$broadcast(EVENT.ON_PUSH_NOTIFICATION);\n              });\n        */\n        /*\n              // Register with the Ionic Push service.  All parameters are optional.\n              push.register(function(token){\n                //console.log(token);\n                console.log('Device token will be token.token, token= ', token);\n                push.saveToken(token, {'ignore_user': true});\n                //push.saveToken(token);//v0.7.1  // persist the token in the Ionic Platform\n\n                //var user = getUser();\n                //push.addTokenToUser(user);\n                //persist the user\n                //deferred.resolve(user.save());\n              });\n        */\n        //To unregister a device for notifications, just call the following:\n        //push.unregister();\n      }\n\n    }; //end return\n  } ); //end\n","'use strict';\n\n\nangular.module(_SERVICES_)\n.factory('SqLite', function ($q) {\n\n  return  {\n\n    //@see https://github.com/CodeYellowBV/deviceReady/blob/master/deviceReady.js\n    openDB: function (dbName) {//init\n      var db;\n\n      //FIXME check deviceReady\n      var isCordova = typeof window.cordova !== 'undefined';\n\n      var dbRootObject = isCordova ? window.sqlitePlugin : window;\n\n      if (typeof dbRootObject.openDatabase === 'undefined') {\n        window.alert('Your browser has no SQL support!  Please try a Webkit-based browser');\n        return null;\n      }\n      //if (window.sqlitePlugin !== undefined) {\n      if(isCordova){//SqLite\n        //db = window.sqlitePlugin.openDatabase({name: dbName});//in production\n        db = dbRootObject.openDatabase({name: dbName, location: 'default'});//in production\n      }else{//WebSql - For debugging in simulator fallback to native SQL Lite\n        console.log('WebSql init');\n        var DEFAULT_SIZE = 5000000; // max to avoid popup in safari/ios\n        //db = window.openDatabase(dbName, '1.0', 'DemoDB', DEFAULT_SIZE);\n        db = dbRootObject.openDatabase(dbName, '1.0', 'DemoDB', DEFAULT_SIZE);\n      }\n      // ...Some more convenience and specific schema creation code...\n\n      return db;\n    },\n    openDBBackground: function (dbName) {//NOT-IN-USE\n      return window.sqlitePlugin.openDatabase({name: dbName, bgType: 1});\n    },\n    execute: function (db, query, binding) {\n      var q = $q.defer();\n\n      db.transaction(function (tx) {\n        tx.executeSql(query, binding, function (tx, result) {\n          q.resolve(result);\n        },\n        function (transaction, error) {\n          q.reject(error);\n        });\n      });\n      return q.promise;\n    },\n    nestedExecute: function (db, query1, query2, binding1, binding2) {//NOT-IN-USE\n      var q = $q.defer();\n\n      db.transaction(function (tx) {\n        tx.executeSql(query1, binding1, function (tx, result) {\n          q.resolve(result);\n          tx.executeSql(query2, binding2, function (tx, res) {\n            q.resolve(res);\n          });\n        },\n        function (transaction, error) {\n          q.reject(error);\n        });\n      });\n      return q.promise;\n    }\n\n  };//end return\n});//end SqLite\n\n\n/*\n  tx.executeSql(\"CREATE TABLE IF NOT EXISTS MyTable (id INTEGER PRIMARY KEY ASC, text_sample TEXT, date_sample DATETIME)\", []);\n\n  tx.executeSql(\"UPDATE MyTable SET text_sample = ?, date_sample = ? WHERE id = ?\",\n                [t, mDate, id],\n                app.onSuccess,\n                app.onError);\n\n  tx.executeSql(\"INSERT INTO MyTable(text_sample, date_sample) VALUES (?,?)\",\n                [t, cDate],\n                app.onSuccess,\n                app.onError);\n\n  tx.executeSql(\"DELETE FROM MyTable WHERE id = ?\",\n                [id],\n                app.onSuccess,\n                app.onError);\n\n  tx.executeSql(\"SELECT * FROM MyTable ORDER BY id\", [],\n                fn,\n                app.onError);\n\n//selectAllRecords\n    var render = function (tx, rs) {\n        // rs contains our SQLite recordset, at this point you can do anything with it\n        // in this case we'll just loop through it and output the results to the console\n        for (var i = 0; i < rs.rows.length; i++) {\n            console.log(rs.rows.item(i));\n        }\n    }\n*/\n\n/*\n ref:\n\n (function () {\n 'use strict';\n var DEFAULT_SIZE = 5000000; // max to avoid popup in safari/ios\n\n document.addEventListener(\"deviceready\", doOnDeviceReady, false);\n\n var db;\n function doOnDeviceReady() {\n\n //var db = openDatabase(\"String-test.db\", \"1.0\", \"Demo\", DEFAULT_SIZE);\n db = window.sqlitePlugin.openDatabase({name: \"DBX\"});\n\n db.transaction(function(tx) {\n tx.executeSql('DROP TABLE IF EXISTS test_table');\n tx.executeSql('CREATE TABLE IF NOT EXISTS test_table (id integer primary key, data text, data_num integer)');\n });\n\n db.transaction(function(tx) {\n tx.executeSql(\"INSERT INTO test_table (data, data_num) VALUES (?,?)\", [\"test\", 100], function(tx, res) {\n console.log(\"insertId: \" + res.insertId + \" -- probably 1\");\n console.log(\"rowsAffected: \" + res.rowsAffected + \" -- should be 1\");\n });\n });\n\n db.transaction(function(tx) {\n tx.executeSql(\"select count(id) as cnt from test_table;\", [], function(tx, res) {\n console.log(\"res.rows.length: \" + res.rows.length + \" -- should be 1\");\n console.log(\"res.rows.item(0).cnt: \" + res.rows.item(0).cnt + \" -- should be 1\");\n });\n });\n\n }//end doOnDeviceReady\n })();\n\n */\n","/* global ionic */\n'use strict';\n\n/* see jshint error http://jslinterrors.com/redefinition-of-a/ */\n/*jshint -W079 */\nvar _APP_ = 'com.common.mobile.core.App',\n  _CONTROLLERS_ = _APP_ + '.controllers',\n  _DIRECTIVES_ = _APP_ + '.directives',\n  _FILTERS_ = _APP_ + '.filters',\n  _MODULES_ = _APP_ + '.modules',\n  _SERVICES_ = _APP_ + '.services',\n  _CONFIG_ = _APP_ + '.config',\n  _SQLITE_ = _APP_ + '.sqlite';\n\n/* INFO\nDeclare app level module which depends on filters, services, etc\ntop-level module\nangular.module is a global place for creating, registering and retrieving Angular modules\n'com.common.mobile.core.App' is the name of this angular module example (also set in a <body> attribute in index.html)\nthe 2nd parameter is an array of 'requires'\n*/\nvar customerApp = angular.module( _APP_, [\n  // Your application's namespaced modules, so they won't conflict with other modules.\n  // You shouldn't have to touch these unless you want to.\n  _CONTROLLERS_,\n  _DIRECTIVES_,\n  _FILTERS_,\n  _MODULES_,\n  _SERVICES_,\n  _CONFIG_,\n  _SQLITE_,\n\n  'ionic',\n  'angular.filter', //@see https://github.com/a8m/angular-filter\n  'auto.generated', //@see /app/public/scripts/config/generated.js   //REMOVE\n  'ngCordova',\n  'ionic.service.core', //serves as the backbone for all of the ionic.io services. It allows our app to register Ionic Users and communicate with Ionic's servers.\n  'ionic.service.push', //is the core Ionic Push code. It communicates with the push notification plugin we installed before, and allows us to register devices to receive push notifications.\n  'ionic.service.analytics',\n  'pascalprecht.translate', //for i18n\n  'mgo-angular-wizard', //Angular-Wizard\n  //'ja.qr',//janantala angular-qr\n  // 'angulartics'//use angulartics\n  'angulartics.google.analytics.cordova' //angulartics for GA\n] );\n\n// Create global modules. You shouldn't have to touch these.\nangular.module( _CONTROLLERS_, [] );\nangular.module( _DIRECTIVES_, [] );\nangular.module( _FILTERS_, [] );\nangular.module( _MODULES_, [] );\nangular.module( _SERVICES_, [] );\nangular.module( _CONFIG_, [] );\nangular.module( _SQLITE_, [] );\n\n\nvar getOSVersion = function ( ENV ) {\n  var os;\n  if ( ionic.Platform.isIOS() ) {\n    os = ENV.os.ios;\n  } else if ( ionic.Platform.isAndroid() ) {\n    os = ENV.os.android;\n  } else if ( ionic.Platform.isWindowsPhone() ) {\n    os = ENV.os.win;\n  } else {\n    os = ENV.os.android;\n  }\n  return os;\n};\n\n/* INFO\ndocument.addEventListener(\"deviceready\", function () {\n  $cordovaPlugin.someFunction().then(success, error);\n}, false);\nOR with IONIC $ionicPlatform An angular abstraction of ionic.Platform\n$ionicPlatform.ready(function() {\n*/\ncustomerApp.run( function ( $rootScope, $ionicPlatform, $ionicHistory, $state, $ionicCoreSettings,\n  $cordovaDevice, $cordovaAppVersion, $cordovaNetwork,\n  ENV, VAL, VALEXT, EVENT,\n  SqlService, SetupService, NetworkStatusService, NotificationService, AnalyticService, FileService ) {\n\n  $rootScope.rootUi = angular.copy( ENV.emptyRootUi );\n\n  $ionicPlatform.ready( function () {\n    // kick off the platform web client\n    // Ionic.io(); http://docs.ionic.io/v1.0/docs/user-quick-start\n\n    VAL.isDevice = ( window.cordova !== undefined ); // && ( ionic.Platform.isIOS() || ionic.Platform.isAndroid() || ionic.Platform.isWindowsPhone() );\n\n    VAL.device.appId = $ionicCoreSettings.get( 'app_id' );\n\n    //if(window.cordova) or if(window.device)\n    if ( VAL.isDevice ) {\n      NetworkStatusService.alertOfflineNetworkStatus();\n\n      $cordovaAppVersion.getVersionNumber()\n        .then( function ( version ) {\n          VAL.device.verName = version; //0.0.1\n        } );\n      $cordovaAppVersion.getVersionCode()\n        .then( function ( build ) {\n          VAL.device.verCode = build; //18\n        } );\n\n      VAL.device.id = $cordovaDevice.getUUID(); //-OR- device.uuid;\n      VAL.device.os = getOSVersion( ENV ); //-OR- $cordovaDevice.getPlatform()\n      VAL.device.osVer = $cordovaDevice.getVersion();\n      //$cordovaDevice.getModel() //TODO add all to analytics\n\n      NotificationService.initialize(); //setupPushRegister\n\n      AnalyticService.initialize();\n\n    } //end isDevice\n\n    // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard\n    // for form inputs).\n    // The reason we default this to hidden is that native apps don't usually show an accessory bar, at\n    // least on iOS. It's a dead giveaway that an app is using a Web View. However, it's sometimes\n    // useful especially with forms, though we would prefer giving the user a little more room\n    // to interact with the app.\n    if ( window.cordova && window.cordova.plugins.Keyboard ) {\n      cordova.plugins.Keyboard.hideKeyboardAccessoryBar( true );\n      cordova.plugins.Keyboard.disableScroll( true );\n    }\n    if ( window.StatusBar ) {\n      // Set the statusbar to use the default style, tweak this to\n      // remove the status bar on iOS or change it to use white instead of dark colors.\n      StatusBar.styleDefault();\n    }\n\n    /* init db / create schema / create table if not exist */\n    SqlService.onCreate()\n      .then( function () {\n        console.log( 'all tables created by now', VAL );\n        FileService.createDir(); //FIXME PATH_EXISTS_ERR\n        SetupService.beforeAll();\n      } );\n\n    $rootScope.$on( EVENT.RELOAD_APP, function () {\n      console.log( 'RELOAD_APP called' );\n      SetupService.beforeAll();\n    } );\n\n    $rootScope.$on( '$stateChangeStart', function ( event, toState, toParams, fromState, fromParams ) {\n      try {\n        AnalyticService.trackView( toState.name );\n      } catch ( err ) {\n        console.log( 'in $stateChangeStart', err );\n        console.log( 'rootScope stateChangeStart event ' + event + ' toState ' + JSON.stringify( toState ) + ' toParams ' + JSON.stringify( toParams ) + ' fromState ' + JSON.stringify( fromState ) + ' fromParams ' + JSON.stringify( fromParams ) );\n      }\n      //console.log('rootScope stateChangeStart event '+ event +' toState '+JSON.stringify(toState) +' toParams '+JSON.stringify(toParams) +' fromState '+JSON.stringify(fromState) +' fromParams '+JSON.stringify(fromParams));\n      var state = toState.name;\n      if ( state && !( state.indexOf( 'blank' ) > -1 || state.indexOf( 'welcome' ) > -1 || state.indexOf( 'first-launch' ) > -1 || state.indexOf( 'sign-in' ) > -1 || state.indexOf( 'sign-out' ) > -1 ) ) {\n        //if ( state && !state.includes( 'blank' ) && !state.includes( 'first-launch' ) && !state.includes( 'sign-in' ) && !state.includes( 'sign-out' ) ) {\n        //console.log('rootScope stateChangeStart event '+ event +' toState '+JSON.stringify(toState) +' toParams '+JSON.stringify(toParams) +' fromState '+JSON.stringify(fromState) +' fromParams '+JSON.stringify(fromParams));\n        SetupService.updateUiState( state );\n      }\n    } );\n\n  } ); //end ionicPlatform.ready\n\n\n  /*\n    $ionicPlatform.onHardwareBackButton(function () {\n      $ionicHistory.goBack();\n    });\n  document.addEventListener('backbutton', function(event){\n    event.preventDefault(); // EDIT\n    navigator.app.exitApp(); // exit the app\n  });\n  see http://codepen.io/calendee/pen/eqbkl?editors=101\n  $ionicViewService.getBackView is deprecated, please use $ionicHistory.backView instead: http://ionicframework.com/docs/nightly/api/service/$ionicHistory/ vendor.7869339b.js:2\n\n  */\n  $ionicPlatform.registerBackButtonAction( function () {\n    //if($state.is('app.main-page')) {\n    //            ionic.Platform.exitApp();\n    //      }\n    //$ionicHistory.goBack(); //FIXME check see if it work\n\n    console.log( '$rootScope.$viewHistory ', $rootScope.$viewHistory );\n    console.log( '$ionicHistory.backView()', $ionicHistory.backView() );\n    console.log( '$ionicHistory currentStateName', $ionicHistory.currentStateName() );\n    if ( $ionicHistory.currentStateName() === VALEXT.state.landing ) {\n      //ionic.Platform.exitApp();\n      navigator.app.exitApp();\n      //ionic.Platform.exitApp(); // stops the app\n      // or do nothing\n    } else {\n      //var backView = $ionicHistory.backView();\n      //console.log('backView', backView);\n      // if( ! backView) {\n      //   console.log('backView.go');\n      //   backView.go();\n      // }\n      //$state.go($ionicHistory.backView());\n      //$ionicHistory.goBack();\n      $state.go( VALEXT.state.landing );\n    }\n  }, 100 );\n\n} ); //end App.run\n","'use strict';\n\n/*\n * config/i18n.js\n *\n * Defines the i18n for the application.\n * \n http://userguide.icu-project.org/locale\n http://www.lingoes.net/en/translator/langcode.htm\n https://msdn.microsoft.com/en-us/library/ms533052(v=vs.85).aspx\n https://msdn.microsoft.com/en-us/library/ee825488(v=cs.20).aspx\n\n de-de\n en-us, es-us, en-au, and zh-cn\n hi-in\n\nSpanish(Spain)-Español, es_ES. Spanish(USA), es_US. Spanish(Uruguay)\n\n english - en\n deutsch - de\n Country and Language\n <select name=\"select_locale\" class=\"intl_drop\">\n\t\t\t\t<option value=\"0\">- Select One -</option>\n\t\t\t\t<option value=\"1\">United States - English</option>\n\t\t\t\t<option value=\"2\">United States - Español</option>\n\t\t\t\t<option value=\"3\">Mexico - Español</option>\n\t\t\t\t<option value=\"4\">Canada - English</option>\n\t\t\t\t<option value=\"5\">Canada - Français</option>\n\t\t\t</select>\n\n */\nangular.module(_APP_)\n.config(function ($translateProvider) {\n\n  $translateProvider.useStaticFilesLoader({\n    prefix: 'public/i18n/',\n    suffix: '.json'\n  });\n  $translateProvider.preferredLanguage('en-us');\n\n});\n","/*global BASE */\n'use strict';\n\nangular.module( _APP_ )\n  .config( function ( $httpProvider, $provide ) {\n\n    var isServerCall = function ( config ) {\n      //config.url.indexOf('api/') = 0 if found and !config.url.indexOf('api/') = true\n      return ( config && config.url && ( !config.url.indexOf( BASE ) ) ); // search for /api/ or api/\n    };\n    /*\n        $provide.factory( 'apiInterceptor', [ 'VAL', function ( VAL ) {\n          return {\n            request: function ( config ) {\n              if ( isServerCall( config ) ) {\n                //ONE time $http.defaults.headers.common.Authorization = 'Bearer ' + VAL.token;\n                config.headers.authorization = 'Bearer ' + VAL.token; //Authorization: Bearer <token>\n                config.headers[ 'x-access-token' ] = VAL.token;\n              }\n              return config;\n            }\n          }; //end return\n        } ] ); //end apiInterceptor\n    */\n    //showSpinner\n    //  Global spinner handling\n    $provide.factory( 'spinnerInterceptor', [ '$q', 'GlobalDataService', function ( $q, GlobalDataService ) {\n      return {\n        request: function ( config ) {\n          if ( isServerCall( config ) ) {\n            GlobalDataService.showSpinner( true );\n          }\n          return config;\n        },\n        response: function ( response ) {\n          if ( response && isServerCall( response.config ) ) {\n            GlobalDataService.showSpinner( false );\n          }\n          return response || $q.when( response ); //has to return a response object or a promise.\n        },\n        responseError: function () {\n          GlobalDataService.showSpinner( false );\n        }\n      }; //end return\n    } ] ); //end alertMessageInterceptor\n\n    //  Global message handling\n    $provide.factory( 'alertMessageInterceptor', [ '$q', 'GlobalDataService', function ( $q, GlobalDataService ) {\n      return {\n        response: function ( response ) {\n          //do something on success\n          //only receive responses that fall below status code 300, there is no use for it when we want to catch 401.\n          //Will only be called for HTTP up to 300\n          if ( !String.prototype.startsWith ) {\n            String.prototype.startsWith = function ( str ) {\n              return !this.indexOf( str );\n            };\n          }\n          if ( response && ( ( response.config.url )\n              .startsWith( BASE ) ) ) { //examine JSON response\n            GlobalDataService.addMsg( response.data.msg );\n          }\n          //Global http error handling\n          return response || $q.when( response ); //has to return a response object or a promise.\n        }\n      }; //end return\n    } ] ); //end alertMessageInterceptor\n\n    // Handling Failed Authentication from the API\n    $provide.factory( 'signsOutUserOn401', [ '$q', '$location', '$rootScope', 'VALEXT', function ( $q, $location, $rootScope, VALEXT ) {\n      return {\n        //response rejection\n        responseError: function ( rejection ) {\n            // Not loged in or user session has expired, please re-login.\n            if ( rejection.status === 401 ) { //401 Unauthorized\n              //401 response and possibly some sort of authentication exception\n              //location.reload();\n              console.log( '401 Unauthorized. Must authenticate first.' );\n              //SessionService.unset('authData');\n              //AuthenticationService.unauthorizedAccess(); //FIXME Circular Dependency $injector:cdep\n              $location.path( VALEXT.path.signIn );\n              //$state.go( VALEXT.state.signIn );\n            } else if ( rejection.status === 403 ) { //403 Forbidden wrong username or password\n              console.log( '403 Forbidden wrong username or password or Access Denied' );\n              //AuthenticationService.signinFailure();  //FIXME Circular Dependency $injector:cdep\n              //SessionService.unset('authData');\n              $rootScope.user.showSignInFailureMessage = true; //FIXME\n              $location.path( VALEXT.path.signIn );\n              //$state.go( VALEXT.state.signIn );\n            } else if ( rejection.status >= 400 && rejection.status < 500 ) {\n              //ErrorService.setError('Server was unable to find what you were looking for... Sorry!!');\n            }\n\n            // Session has expired - sessionRecoverer\n            if ( rejection.status === 419 ) {\n\n            }\n            // otherwise, default behaviour\n            return $q.reject( rejection );\n          } //end responseError\n      }; //end return\n    } ] ); //end signsOutUserOn401\n\n    /*\n    TODO move below line to config.js\n    Origin:http://localhost:9000\n    Referer:http://localhost:9000/\n\n    Access-Control-Allow-Credentials:true\n    Access-Control-Allow-Methods:POST, OPTIONS, GET, PUT, DELETE\n    Access-Control-Allow-Origin:http://localhost:9000\n    Access-Control-Max-Age:3600\n\n    $httpProvider.defaults.headers.common['Access-Control-Allow-Origin'] = '*';\n\n    Server side\n    Access-Control-Allow-Headers: Content-Type\n    Access-Control-Allow-Methods: GET, POST, OPTIONS\n    Access-Control-Allow-Origin: *\n    */\n    //$httpProvider.defaults.headers.common[ 'Access-Control-Allow-Origin' ] = '*';\n    delete $httpProvider.defaults.headers.common[ 'X-Requested-With' ]; //@see CorsFilter.java\n    //$httpProvider.interceptors.push( 'apiInterceptor' );\n    $httpProvider.interceptors.push( 'signsOutUserOn401' );\n    $httpProvider.interceptors.push( 'alertMessageInterceptor' );\n    $httpProvider.interceptors.push( 'spinnerInterceptor' );\n\n  } );\n/*\nangular.module( _APP_ )\n  .config( [ '$httpProvider', function ( $httpProvider ) {\n    //Reset headers to avoid OPTIONS request (aka preflight)\n    $httpProvider.defaults.headers.common = {};\n    $httpProvider.defaults.headers.post = {};\n    $httpProvider.defaults.headers.put = {};\n    $httpProvider.defaults.headers.patch = {};\n  } ] );\n*/\n","/* global ionic */\n'use strict';\n\n/*\n * config/router.js\n *\n * Defines the routes for the application.\n *\n *  ngmin will take care of\n *  .config(['$routeProvider', function($routeProvider) {\n *  .config(function ($routeProvider) {\n */\n\nangular.module( _APP_ )\n  .config( function ( $ionicConfigProvider, $stateProvider, $urlRouterProvider ) { //, datepickerConfig, datepickerPopupConfig\n\n    /*\n    To enable native scrolls you can either:\n    a) Add overflow-scroll=true to the content tag.\n    This is a bit tedious approach and will get enabled for every platform (remember about iOS behavious).\n    b) As a second approach, we can enable native scrolls for Android only devices\n    and do it in one place, in the app's main file:\n    */\n    // Enable native scrolls for Android platform only,\n    // as you see, we're disabling jsScrolling to achieve this.\n    //see http://ionicframework.com/docs/api/service/$ionicPlatform/\n    //see http://blog.ionic.io/native-scrolling-in-ionic-a-tale-in-rhyme/\n    if ( ionic.Platform.isAndroid() ) {\n      //console.log('jsScrolling false ');\n      //$ionicConfigProvider.scrolling.jsScrolling(false);\n      //$ionicConfigProvider.platform.android.scrolling.jsScrolling(false);\n    }\n\n    // if none of the above states are matched, use this as the fallback\n    //$urlRouterProvider.otherwise('/');\n    $urlRouterProvider.otherwise( '/blank' );\n\n    $stateProvider\n    /*\n    An abstract state can have child states but can not get activated itself.\n    An 'abstract' state is simply a state that can't be transitioned to.\n    It is activated implicitly when one of its descendants are activated.\n    */\n      .state( 'blank', {\n        url: '/blank',\n        templateUrl: 'public/views/common/blank.html'\n      } )\n      .state( 'welcome', {\n        url: '/welcome',\n        templateUrl: 'public/views/common/welcome.html'\n      } )\n\n    //\n    // .state( 'app.first-launch', {\n    //   cache: false,\n    //   url: '/first-launch',\n    //   views: {\n    //     'menuContent': {\n    //       templateUrl: 'public/views/common/first-launch.html'\n    //     }\n    //   }\n    // } )\n\n    ;\n\n  } );\n","'use strict';\n\n/*\n * config/sanitizer.js\n *\n * Defines the regex for link sanitation.\n */\nangular.module( _APP_ )\n  .config( function () {\n    // .config(function ($compileProvider) {\n    //sanitize white list for angular/phonegap\n    //var sanitation = new RegExp('^\\s*(https?|ftp|mailto|file|tel|comgooglemaps|sms):');\n    //$compileProvider.aHrefSanitizationWhitelist(sanitation);\n    //\t$compileProvider.urlSanitizationWhitelist(/^\\s*(https?|ftp|mailto|file|tel):/);\n  } );\n","'use strict';\n\n/*\nUsage <div data-alert-message data-messages=\"rootUi.msg\" class=\"padding\"></div>\n*/\nangular\n  .module( _DIRECTIVES_ )\n  .directive( 'alertMessage', function () {\n    return {\n      restrict: 'AE', //A = Attribute, C = Class Name, E = Element, M = HTML Comments\n      templateUrl: 'public/views/common/alert-message.html',\n      replace: true,\n      scope: {\n        messages: '='\n      },\n      link: function ( scope, iElement, iAttrs ) {\n        scope.closeable = 'close' in iAttrs;\n      }\n    };\n  } );\n","'use strict';\n\n/*\nUsage: <div data-prk-menu-right></div>\n\n*/\nangular.module( _DIRECTIVES_ )\n  .directive( 'prkMenuRight', function () {\n    return {\n      restrict: 'AE', //A = Attribute, C = Class Name, E = Element, M = HTML Comments\n      scope: { // @ for One Way Text Binding  //= for Two Way Binding //& to Execute Functions in the Parent Scope\n      },\n      templateUrl: 'public/views/navigation/menu-right.html',\n      controller: 'PopoverController'\n    };\n  } );\n","'use strict';\n/*\n Usage: <div\n data-prk-photo\n data-blob-key=\"model.person.blobKey\"\n data-placeholder-class=\"placeholder-photo\"></div>\n\n placeholder-photo\n placeholder-logo\n */\nangular\n.module(_DIRECTIVES_)\n.directive('prkPhoto', function (AssetService) {\n\n  var getPhotoUrl = function(scope){\n    AssetService.assetUrl(scope.blobKey, 'image').then(function(photoUrl){\n      if(photoUrl){\n        scope.photoUrl = photoUrl;\n      }else{\n        scope.photoUrl = undefined;\n      }\n    }, function() {\n      scope.photoUrl = undefined;\n    });\n  };\n  return {\n    restrict:'A', //A = Attribute, C = Class Name, E = Element, M = HTML Comments\n    scope:{\n      blobKey: '=',\n      placeholderClass: '@'\n    },\n    template: '<img data-ng-class=\"{ \\'{{placeholderClass}}\\' : !photoUrl}\" data-ng-src=\"{{photoUrl}}\"/>',\n    link: function (scope) {\n      scope.$watch('blobKey', function(){\n        getPhotoUrl(scope);\n      });\n      if(scope.blobKey){\n        getPhotoUrl(scope);\n      }\n    }\n  };\n});\n","'use strict';\n\nangular.module( _CONTROLLERS_ )\n  .controller( 'AuthenticationController', function ( $rootScope, $scope, $state, ENV, VAL, VALEXT, EVENT, AuthenticationService, SetupService, UtilService, AppDataService ) {\n\n    /* ************************************ Private function/object ************************************ */\n\n    var emptyModel = {\n      username: null,\n      password: null\n    };\n\n    var init = function () {\n      $scope.model = angular.copy( emptyModel );\n    };\n\n    /* ************************************ Public function/object ************************************ */\n    init();\n\n    $scope.signin = function () {\n      AuthenticationService.signin( $scope.model )\n        .then( function ( response ) {\n\n          var token = response.headers( ENV.tokenHeaderName );\n          console.log( 'x-access-token: ' + token );\n\n          var appData = {};\n          appData.id = ENV.appDataTypeTOKEN;\n          appData.value = token;\n          AppDataService.saveAppDataLocal( appData )\n            .then( function () {\n\n              AppDataService.getSTAppData()\n                .then( function ( settingAppData ) {\n                  var val = {};\n                  val.theme = settingAppData.value.theme;\n                  val.lang = settingAppData.value.lang;\n                  val.uiState = settingAppData.value.uiState;\n\n                  //update app data and then launch beforeAll\n                  var appDataDto = ENV.emptyAppDataDto;\n                  //appDataDto.id = VAL.claim.uid + ENV.SEPARATOR + ENV.appDataTypeST; //server will take care\n                  appDataDto.uid = VAL.claim.uid;\n                  appDataDto.type = ENV.appDataTypeST;\n                  appDataDto.val = val;\n\n                  AppDataService.saveAppData( appDataDto )\n                    .then( function () {\n                      SetupService.beforeAll();\n                    } );\n                } );\n            } );\n        }, function () {\n          $state.go( VALEXT.state.signIn );\n        } );\n    };\n    $scope.signout = function () {\n      AuthenticationService.signout()\n        .then( function () {\n          $rootScope.$broadcast( EVENT.ONLINE_STATE_CHANGE );\n          $state.go( VALEXT.state.signIn );\n        } );\n    };\n    $scope.resetPassword = function () {\n      AuthenticationService.resetPassword( $scope.model.username )\n        .then( function ( response ) {\n          if ( response.data.staus === 'SUCCESS' ) {\n            // var message = '';//\n            // sendSms( $scope.model.username, message );\n            $state.go( VALEXT.state.signIn );\n          }\n        } );\n    };\n\n\n  } );\n","/* global goog */\n'use strict';\n\nangular.module( _CONTROLLERS_ )\n  .controller( 'MainController', function ( $rootScope, $ionicPlatform, $timeout, ENV, MainService ) {\n\n    /* ************************************ Private function/object ************************************ */\n    var socket = {};\n\n    /*\n    ActivityStatusController - reloadSiteActivities - EVENT.RELOAD_ACTIVITY_STATUS\n    CarStatusController - reloadCustomerActivities - QueueDetail - EVENT.RELOAD_CAR_STATUS\n    SiteStatusController - reloadCustomerVisitedSites\n    */\n    var broadcast = function ( event ) {\n      $rootScope.$broadcast( event );\n    };\n    /* ************************************ socket function/object ************************************ */\n    var initSocket = function () {\n      socket.onopen = function () {\n        console.log( 'Channel Connected!' );\n      };\n      socket.onmessage = function ( message ) {\n        if ( message.data ) {\n          var jsonData = JSON.parse( message.data );\n          if ( jsonData.event ) {\n            broadcast( jsonData.event );\n          }\n        }\n      };\n      socket.onerror = function () {\n        console.log( 'Connection Error!' );\n      };\n      socket.onclose = function () {\n        console.log( 'Connection Closed!' );\n        openChannel();\n      };\n    };\n    var openChannel = function () {\n      MainService.getToken()\n        .then( function ( response ) {\n          if ( response && response.data.status === 'SUCCESS' ) {\n            //VAL.channelToken = response.data.data.token;\n            var token = response.data.data.token;\n            var channel = new goog.appengine.Channel( token );\n            socket = channel.open();\n            initSocket();\n          }\n        } );\n    };\n    var init = function () {\n      if ( ENV.openChannel ) {\n        $timeout( function () {\n          openChannel();\n        }, 1000 );\n      }\n    };\n\n    /* ************************************ Public function/object ************************************ */\n    $ionicPlatform.ready( function () {\n      init();\n    } );\n\n  } );\n","/* global ionic */\n'use strict';\n\nangular.module( _CONTROLLERS_ )\n  .controller( 'RateShareController', function ( $scope, $ionicPlatform, $window, VALEXT ) {\n\n    /* ************************************ Private function/object ************************************ */\n    var emptyUi = {\n      isAndroid: false\n    };\n\n    var reset = function () {\n      $scope.ui = angular.copy( emptyUi );\n      $scope.ui.msg = VALEXT.share.msg;\n      $scope.ui.website = VALEXT.share.website;\n      $scope.ui.isAndroid = ionic.Platform.isAndroid(); //(VAL.os === ENV.os.android);\n    };\n    var initRateShare = function () {\n      reset();\n    };\n\n    //Working @see http://stackoverflow.com/questions/4191492/launch-facebook-app-from-other-app\n    var checkFacebookApp = function ( url1, url2, callback ) {\n      var schemeOrPackage = $scope.ui.isAndroid ? 'com.facebook.katana' : 'fb://';\n      console.log( 'schemeOrPackage ', schemeOrPackage );\n      $window.appAvailability.check( schemeOrPackage, function () {\n        console.log( 'appAvailability yes' );\n        callback( url1 );\n      }, function () {\n        console.log( 'appAvailability No' );\n        /*\n        // facebook is not installed,\n        // then open play store to download and install facebook\n        window.open('market://details?id=com.facebook.katana', '_system', 'location=no');\n        */\n        callback( url2 );\n      } );\n    };\n    var openUrl = function ( url ) {\n      console.log( 'final url ', url );\n      $window.open( url, '_system', 'location=no' );\n    };\n    /*\n  @see http://www.gajotres.net/how-to-launch-external-application-with-ionic-framework/2/\n  @see https://github.com/kevendra/com.lampa.startapp\n  var check = function(){\n    var scheme;\n    // Don't forget to add the org.apache.cordova.device plugin!\n    if(device.platform === 'iOS') {\n      scheme = 'twitter://';\n    }else if(device.platform === 'Android') {\n      scheme = 'com.twitter.android';\n    }\n    appAvailability.check(\n      scheme, // URI Scheme\n      function() {  // Success callback\n        window.open('twitter://user?screen_name=gajotres', '_system', 'location=no');\n        console.log('Twitter is available');\n      },\n      function() {  // Error callback\n        window.open('https://twitter.com/gajotres', '_system', 'location=no');\n        console.log('Twitter is not available');\n      }\n    );\n  };\n*/\n    $ionicPlatform.ready( function () {\n      initRateShare();\n    } );\n\n    /* ************************************ Public function/object ************************************ */\n    $scope.openWeb = function () {\n      openUrl( VALEXT.share.website );\n    };\n    $scope.openAppStore = function () {\n      openUrl( VALEXT.share.appStoreUrl );\n    };\n    $scope.openPlayStore = function () {\n      var url = 'market://details?id=' + VALEXT.share.appPackageName;\n      openUrl( url );\n    };\n    $scope.openFacebook = function () { //Working @see http://stackoverflow.com/questions/4191492/launch-facebook-app-from-other-app\n      if ( $scope.ui.isAndroid ) {\n        var url1 = 'fb://page/' + VALEXT.share.fbPageId; // fb://page/870549469709982\n        var url2 = VALEXT.share.fbPageUrl; //'https://www.facebook.com/bellme.xyz';//'https://www.facebook.com/pages/BellMe/870549469709982';\n        checkFacebookApp( url1, url2, function ( url ) {\n          openUrl( url );\n        } );\n      } else {\n        //checkFacebookApp not working in iOS\n        var url = 'fb://profile/' + VALEXT.share.fbPageId; // 'fb://profile/870549469709982'\n        openUrl( url ); //page will be open in facebook app\n      }\n    };\n\n\n  } );\n","'use strict';\n\nangular.module( _CONTROLLERS_ )\n  .controller( 'VersionController', function ( $scope, $ionicPlatform, VAL ) {\n\n    /* ************************************ Private function/object ************************************ */\n    var emptyUi = {\n      version: undefined,\n      versionCode: undefined\n    };\n\n    var reset = function () {\n      $scope.ui = angular.copy( emptyUi );\n    };\n    var initVersion = function () {\n      reset();\n      $scope.ui.version = VAL.device.verName;\n      $scope.ui.versionCode = VAL.device.verCode;\n    };\n\n    $ionicPlatform.ready( function () {\n      initVersion();\n    } );\n\n    /* ************************************ Public function/object ************************************ */\n\n  } );\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'AppDataService', function ( $q, $http, ENV, VAL, API, AppDataSqlService ) {\n\n    var getEmptyIfSTAppDataNull = function ( settingAppData ) {\n      if ( !settingAppData ) {\n        //create settingAppData\n        settingAppData = {};\n        settingAppData.id = ENV.appDataTypeST;\n        settingAppData.value = ENV.emptySTAppData;\n      }\n      return settingAppData;\n    };\n    var getAppData = function ( id ) {\n      return AppDataSqlService.getAppData( id );\n    };\n    return {\n      saveAppData: function ( appData ) {\n        return $http.post( API.SETTING, appData );\n      },\n      saveAppDataLocal: function ( appData ) {\n        return AppDataSqlService.saveAppData( appData );\n      },\n      getSTAppData: function () {\n        var deferred = $q.defer();\n        getAppData( ENV.appDataTypeST )\n          .then( function ( settingAppData ) {\n            deferred.resolve( getEmptyIfSTAppDataNull( settingAppData ) );\n          } );\n        return deferred.promise;\n      },\n      getAppData: function ( id ) { //see authCheck auth-service\n        return getAppData( id );\n      }\n    }; //end return\n  } );\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'AppDataSqlService', function ( $q, $ionicPlatform, ENV, SqLite, UtilService ) {\n\n    var db = null;\n    $ionicPlatform.ready( function () {\n      db = SqLite.openDB( ENV.dbName );\n    } );\n\n    var getAppDataParsed = function ( id ) {\n      var deferred = $q.defer();\n      var query = 'SELECT * FROM appData WHERE id = ?';\n      SqLite.execute( db, query, [ id ] )\n        .then( function ( results ) {\n          var appData;\n          try {\n            var resultAppData = results.rows.item( 0 );\n            if ( resultAppData ) {\n              var value = JSON.parse( resultAppData.value );\n              appData = {};\n              appData.id = resultAppData.id;\n              appData.value = value;\n            }\n          } catch ( err ) {\n            console.log( 'id ' + id + ' | catch err : ' + err.message );\n          }\n          deferred.resolve( appData );\n        } );\n      return deferred.promise;\n    };\n    return {\n      saveAppData: function ( appData ) {\n        var binding, query = 'DELETE FROM appData WHERE id = ?';\n        SqLite.execute( db, query, [ appData.id ] );\n\n        var value = JSON.stringify( appData.value );\n        query = 'INSERT INTO appData (id, value, modifiedAt) VALUES (?, ?, ?)';\n        binding = [ appData.id, value, UtilService.getTime() ];\n\n        return SqLite.execute( db, query, binding );\n      },\n      getAppData: function ( id ) {\n        return getAppDataParsed( id );\n      }\n    };\n  } ); //end AppDataSqlService\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'AuthenticationService', function ( $http, $sanitize, ENV, VAL, API, UtilService ) {\n\n    var sanitizeCredentials = function ( credentials ) {\n      return 'username=' + $sanitize( credentials.username ) + '&password=' + $sanitize( credentials.password ) + '&deviceId=' + VAL.device.id + '&deviceType=' + VAL.device.type;\n    };\n\n    return {\n      signin: function ( credentials ) {\n\n        var config = {\n          headers: {\n            'Content-Type': 'application/x-www-form-urlencoded'\n          }\n        };\n        var signin = $http.post( API.SIGNIN, sanitizeCredentials( credentials ), config );\n\n        signin.then( function ( response ) {\n          var token = response.headers( ENV.tokenHeaderName );\n          console.log( 'x-access-token: ' + token );\n          UtilService.updateVALAndHeaders( token );\n        } );\n\n        return signin;\n      },\n      signout: function () {\n        var signout = $http.get( API.SIGNOUT );\n        signout.then( function () {\n          var token; // = undefined;\n          UtilService.updateVALAndHeaders( token );\n          console.log( 'signout.success' );\n        } );\n        return signout;\n      }\n\n    }; //end return\n  } );\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('GlobalDataService', function($rootScope, $timeout) {\n\n  var showSpinner = function(showSpinner){\n    $rootScope.rootUi.showSpinner = showSpinner;\n    $timeout(\n      function () {\n        $rootScope.rootUi.showSpinner = false;\n      }, 30000 //max 30 sec.\n    );\n  };\n  var working = function(working) {\n    $rootScope.rootUi.working = working;\n    $timeout(\n      function () {\n        $rootScope.rootUi.working = false;\n      }, 5000 //max 5 sec. show working\n    );\n  };\n  var addMsg = function(msg){\n    $rootScope.rootUi.msg = msg;\n    $timeout(\n      function () {\n        $rootScope.rootUi.msg = null;\n      }, 4000 //max 4 sec. show msg\n    );\n  };\n  /* JSON structure -\n    \"msg\": [\n    {\n      \"type\": \"success\",\n      \"value\": [\n        {\n          \"title\": \"title 1\",\n          \"text\": \"MSG-FORM-SUCCESS-SAVE\",\n          \"param\": null\n        }\n      . . .\n  */\n  var addMessage = function(type, text, title, param){\n    var message = {};\n    message.type = type;\n    message.value = [];\n    var messageVal = {};\n    messageVal.text = text;\n    messageVal.title = title;\n    messageVal.param = param;\n    message.value.push(messageVal);\n    var msg = [];\n    msg.push(message);\n    addMsg(msg);\n  };\n  return {\n    showSpinner: function(status){\n      showSpinner(status);\n    },\n    working : function() {\n      working(true);\n    },\n    isWorking : function() {\n      return $rootScope.rootUi.working; //return $rootScope.rootUi.working not working holding old state //TODO verify one more time\n    },\n    resetWorking : function() {\n      $rootScope.rootUi.working = false;\n    },\n    addMessage: function(type, text, title, param){\n      addMessage(type, text, title, param);\n    },\n    addMsg : function(msg){\n      addMsg(msg);\n    }\n  };//end return\n});//end GlobalDataService\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('MainService', function($http, $q, ENV, VAL, API) {\n\n  return {\n    getToken : function() {\n      var deferred = $q.defer();\n      var isPartnerApp = ENV.appName === 'PARTNER';\n      var config = {params : {'deviceId': VAL.uuid, 'isPartnerApp': isPartnerApp}};\n      deferred.resolve($http.get(API.CHANNEL_TOKEN, config));\n      return deferred.promise;\n    }\n\n  };//end return\n});//end MainService\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'NetworkStatusService', function ( $cordovaNetwork, $ionicPopup, ENV, VAL ) {\n\n    return {\n      alertOfflineNetworkStatus: function () {\n\n        if ( VAL.isDevice && ENV.showNetworkStatusAlert && $cordovaNetwork.isOffline() ) {\n          //angular 2\n          // var alert = Alert.create({\n          //   title: 'Network Status!',\n          //   subTitle: 'App running in offline  mode!',\n          //   buttons: ['OK']\n          // });\n          // this.nav.present(alert);\n\n          //$translate('title').then(function(titleVal){\n          var confirmPopup = $ionicPopup.alert( {\n            //No Internet Connection\n            //Sorry, no Internet connectivity detected. Please reconnect and try again\n            title: 'No Internet Connection!', //Network Status\n            template: 'Sorry, no Internet connectivity detected. App running in offline mode!' //$translate('msg.confirm.delete.generic')\n          } );\n          confirmPopup.then( function ( res ) {\n            if ( res ) { //confirm\n              console.log( 'done Network Status!' );\n            }\n          } );\n          //});\n        }\n      }\n\n    }; //end return\n  } ); //end\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'RegistrationService', function ( $http, ENV, VAL, API ) {\n\n    return {\n      deviceRegistration: function () {\n        var deviceModel = angular.copy( VAL.device );\n        if ( VAL.claim ) {\n          deviceModel.uid = VAL.claim.uid;\n        }\n        return $http.post( API.DEVICE, deviceModel );\n      },\n      pushNotificationRegistration: function ( token ) {\n        var tokenModel = {};\n        tokenModel.id = VAL.device.id + ENV.SEPARATOR + VAL.device.appId;\n        //tokenModel.os = VAL.device.os;\n        tokenModel.token = token;\n        tokenModel.active = true;\n        return $http.post( API.PUSH_NOTIFICATION, tokenModel );\n      }\n    }; //end return\n  } );\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'SetupService', function ( $http, $rootScope, $q, $state, $cordovaNetwork, $timeout,\n    $ionicHistory, EVENT, ENV, VAL, VALEXT, UtilService,\n    AppDataService, AppDataExtService, AppUpdateService, RegistrationService ) {\n\n    var goToLastUiState = function () {\n      var deferred = $q.defer();\n      AppDataService.getSTAppData()\n        .then( function ( settingAppData ) {\n          if ( settingAppData.value.uiState ) {\n            $state.go( VALEXT.state.landing ) //just to build history\n              .then( function () { //FIXME app.about-us with parent state\n                var backView = $ionicHistory.viewHistory()\n                  .currentView;\n                $ionicHistory.backView( backView ); //(VALEXT.state.landing);\n                $state.go( settingAppData.value.uiState ); //FIXME $ionicHistory\n              } );\n            // console.log('XXXXX $ionicHistory ', $ionicHistory);\n            // console.log('XXXXX $ionicHistory ', $ionicHistory.viewHistory());\n          } else {\n            $state.go( VALEXT.state.landing );\n          }\n          $rootScope.$broadcast( EVENT.APP_LAUNCH );\n          deferred.resolve( 'all done!' );\n        } );\n      return deferred.promise; //promise\n    };\n    var updateNavigation = function ( navigation ) {\n      var deferred = $q.defer();\n      AppDataService.getSTAppData()\n        .then( function ( settingAppData ) {\n          settingAppData.value.navigation = navigation;\n          deferred.resolve( AppDataService.saveAppDataLocal( settingAppData ) );\n        } );\n      return deferred.promise; //promise\n    };\n\n    var getTokenAndUpdateVAL = function () {\n      var deferred = $q.defer();\n      AppDataService.getAppData( ENV.appDataTypeTOKEN )\n        .then( function ( appData ) {\n          if ( appData ) {\n            var token = appData.value;\n            UtilService.updateVALAndHeaders( token );\n          }\n          deferred.resolve( 'all done!' );\n        } );\n      return deferred.promise; //promise\n    };\n    /*\n    data.person:\n    data.cars: or data.sites:\n    //setting\n    data.navigation:\n    data.lang\n    data.token\n    data.register:\n    */\n    var firstLaunchForRegisteredUser = function ( data ) {\n      var deferred = $q.defer();\n      var promises = [];\n      var index = 0;\n\n      promises[ index++ ] = updateNavigation( data.navigation );\n\n      //start registration\n      //NotificationService.setupPushRegister();\n\n      AppDataService.getSTAppData()\n        .then( function ( settingAppData ) {\n          settingAppData.value.navigation = data.navigation;\n          settingAppData.value.lang = data.lang;\n          settingAppData.value.theme = data.theme;\n          settingAppData.value.activeSiteId = data.activeSiteId;\n          settingAppData.value.activeAreaId = data.activeAreaId;\n          /*\n          var isReg = settingAppData.value.notification.register;\n          var localNotificationRegister = (null !== isReg && isReg);\n          settingAppData.value.notification.token = data.token;\n          settingAppData.value.notification.register = data.register;\n          if(data.register && ! localNotificationRegister){\n            NotificationService.pushRegister();//if server says it registered (true) and local db say no(flase)\n            //settingAppData.value.register = true;\n            //this process will take time so register = true and token will set after saveAppData\n          }\n          */\n          promises[ index++ ] = AppDataService.saveAppDataLocal( settingAppData );\n\n        } );\n\n      promises[ index++ ] = AppDataExtService.saveCustomSetting( data );\n\n      $q.all( promises )\n        .then( function () {\n          $rootScope.$broadcast( EVENT.APP_LAUNCH );\n          deferred.resolve( 'all done!' );\n        } );\n      return deferred.promise; //promise\n    };\n    var firstLaunch = function () {\n      VAL.firstLaunch = true;\n      var deferred = $q.defer();\n      $timeout( function () {\n        console.log( 'in state go app.first-launch' );\n        $state.go( VALEXT.state.welcome );\n        deferred.resolve( 'all done!' );\n      }, 1000 );\n\n      return deferred.promise; //promise\n    };\n\n    return {\n      updateUiState: function ( uiState ) {\n        var deferred = $q.defer();\n        try {\n          AppDataService.getSTAppData()\n            .then( function ( settingAppData ) { //SELECT * FROM appData where id = 'SETTING'\n              settingAppData.value.uiState = uiState;\n              deferred.resolve( AppDataService.saveAppDataLocal( settingAppData ) );\n            } );\n        } catch ( e ) {\n          deferred.resolve( e );\n        }\n        return deferred.promise; //promise\n      },\n      beforeAll: function () {\n        var deferred = $q.defer();\n        AppUpdateService.applyUpdatesOnVersionChanged()\n          .then( function () {\n            getTokenAndUpdateVAL()\n              .then( function () {\n                if ( VAL.isDevice && $cordovaNetwork.isOffline() ) {\n                  //offline app launch\n                  deferred.resolve( goToLastUiState() );\n                } else {\n                  RegistrationService.deviceRegistration()\n                    .then( function success( response ) { //FromServer\n                      if ( response ) {\n                        //online app launch\n                        var data = response.data.data;\n                        if ( !data ) {\n                          data = {};\n                        }\n                        firstLaunchForRegisteredUser( data )\n                          .then( function () {\n                            if ( data.appData ) { //we can use data.usr if needed change server\n                              console.log( 'normalFlow ' );\n                              //usr profile found\n                              deferred.resolve( goToLastUiState() );\n                            } else {\n                              console.log( 'firstLaunch ' );\n                              //usr profile NOT found\n                              deferred.resolve( firstLaunch( data ) );\n                            }\n                          } );\n                      } else {\n                        deferred.resolve( goToLastUiState() );\n                      } //end if response.data\n                    }, function error( err ) {\n                      console.log( 'beforeAll deviceRegistration error - offline app launch', err );\n                      deferred.resolve( goToLastUiState() );\n                    } );\n                } //end else online\n\n              } ); //updateTokenToVAL\n          } ); //end applyUpdatesOnVersionChanged\n\n        return deferred.promise; //promise\n      }\n\n    }; //end return\n  } ); //end\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'SqlService', function ( $q, $ionicPlatform, ENV, SqLite ) {\n\n    var db = null;\n\n    $ionicPlatform.ready( function () {\n      db = SqLite.openDB( ENV.dbName );\n    } );\n\n    return {\n      onCreate: function () {\n        console.log( 'onCreate' );\n        // creating required tables\n        /*\n          id - generated\n          user\n          title\n          text\n          status - 0(in-complete false) , 1(completed true)\n          modifiedAt\n         */\n        var query = 'CREATE TABLE IF NOT EXISTS todo (id INTEGER primary key, user INTEGER, title TEXT, text TEXT, status INTEGER, modifiedAt NUMERIC)';\n        var todoPromise = SqLite.execute( db, query );\n        /*\n        @see OverrideModelDataImpl#getAdditionalData or Api.SHARE_DATA\n        id - SHARE_DATA\n        value -\n          sessionCurrent\n          sessionPrevious\n          allSession\n          allSessionNotCurrent\n        */\n        query = 'CREATE TABLE IF NOT EXISTS appData (id TEXT primary key, value TEXT, modifiedAt NUMERIC)';\n        var appDataPromise = SqLite.execute( db, query );\n        //or use file system\n        /*\n        id - studentClassEnrollmentId\n        fileName - IMG-<getTime()>  AUD-<getTime()>  VID-<getTime()>  send\n        modifiedAt\n        */\n        query = 'CREATE TABLE IF NOT EXISTS asset (id TEXT primary key, fileName TEXT, modifiedAt NUMERIC)';\n        var assetPromise = SqLite.execute( db, query );\n        //SqLite.execute(db, query);\n        var promises = [ todoPromise, appDataPromise, assetPromise ];\n        return $q.all( promises );\n      },\n      dropAll: function () {\n        /*\n        While it is true that there is no DROP ALL TABLES command you can use the following set of commands.\n\n        Note: These commands have the potential to corrupt your database, so make sure you have a backup\n        */\n        var query = 'PRAGMA writable_schema = 1';\n        SqLite.execute( db, query );\n\n        query = 'delete from sqlite_master where type in (\\'table\\', \\'index\\', \\'trigger\\')';\n\n        console.log( 'query ' + query );\n        SqLite.execute( db, query );\n\n        query = 'PRAGMA writable_schema = 0';\n        SqLite.execute( db, query );\n\n        query = 'VACUUM'; //recover the deleted space with\n        SqLite.execute( db, query );\n\n        query = 'PRAGMA INTEGRITY_CHECK'; //good test to make sure everything is ok\n        SqLite.execute( db, query );\n      },\n      onUpgrade: function () {\n        // on upgrade drop older tables\n\n        // create new tables\n        //onCreate();\n      }\n    };\n  } ); //end SqlService\n","'use strict';\n\nangular.module(_SERVICES_)\n.factory('SessionService', function($window) {\n  return {\n    get: function(key) {\n      return $window.sessionStorage.getItem(key);\n    },\n    set: function(key, val) {\n      return $window.sessionStorage.setItem(key, val);\n    },\n    unset: function(key) {\n      return $window.sessionStorage.removeItem(key);\n    }\n  };\n});//end SessionService\n\nangular.module(_SERVICES_)\n.factory('LocalService', function($window) {\n  return {\n    get: function(key) {\n      return $window.localStorage.getItem(key);\n    },\n    set: function(key, val) {\n      return $window.localStorage.setItem(key, val);\n    },\n    unset: function(key) {\n      return $window.localStorage.removeItem(key);\n    }\n  };\n});//end LocalService\n","'use strict';\n\nangular.module( _SERVICES_ )\n  .factory( 'UtilService', function ( $http, VAL ) {\n\n    var getUserClaimData = function () {\n      var claim = {};\n      var token = VAL.token;\n      if ( token ) {\n        var payload = token.split( '.' );\n        //$base64.decode issue does not able to decode -  $base64.decode('eyJleHAiOjE0NjgyNTUzMzczMTIsInVpZCI6NTEwNTY1MDk2MzA1NDU5Mn0');\n        //claim = JSON.parse( $base64.decode( payload[ 1 ] ) );\n        claim = JSON.parse( window.atob( payload[ 1 ] ) );\n      }\n      return claim;\n    };\n    var updateVALAndHeaders = function ( token ) {\n      VAL.token = token;\n      $http.defaults.headers.common.Authorization = 'Bearer ' + token;\n      var claim = getUserClaimData();\n      VAL.claim = claim;\n      //VAL.device.uid = claim.uid; //TODO refactor and remove this use - VAL.claim.uid\n    };\n\n    return {\n      isNotNull: function ( value ) {\n        return ( undefined !== value && null !== value ); //typeof value !== undefined && value;\n      },\n      /*\n      add space in between text html\n      */\n      addSpaceInBetweenText: function ( value, spaceAfter ) {\n        var retValue = '';\n        for ( var i = 0; i < value.length; i++ ) {\n          if ( i % spaceAfter === 0 ) {\n            retValue += ' ';\n          }\n          retValue += value.charAt( i );\n        }\n        return retValue;\n      },\n\n      //edu\n      emptyDeleteEntityAppData: function () {\n        var deleteEntityAppData = {};\n        deleteEntityAppData.id = 'DELETE_ENTITY';\n        deleteEntityAppData.value = {}; //kind: ids:[] X or kind:[] is easy to search\n        return deleteEntityAppData;\n      },\n      isEmptyObjectNew: function ( obj ) {\n        return Object.keys( obj )\n          .length === 0; //ECMAScript 5 support\n      },\n      isEmptyObject: function ( obj ) { //return JSON.stringify(obj) === '{}';\n        for ( var prop in obj ) {\n          if ( obj.hasOwnProperty( prop ) ) {\n            return false;\n          }\n        }\n        return true;\n      },\n      sum: function ( a, b ) {\n        if ( a && b ) {\n          return parseInt( a ) + parseInt( b );\n        }\n        if ( a ) {\n          return parseInt( a );\n        }\n        if ( b ) {\n          return parseInt( b );\n        }\n        return;\n      }, //end sum\n      /*\n      array without duplicates\n      function ArrNoDupe(a) {\n          var temp = {};\n          for (var i = 0; i < a.length; i++){\n              temp[a[i]] = true;\n          }\n          var r = [];\n          for(var k in temp){\n            r.push(k);\n          }\n          return r;\n      }\n      */\n      unique: function ( a ) {\n        var arr = [];\n        for ( var i = 0; i < a.length; i++ ) {\n          if ( arr.indexOf( a[ i ] ) === -1 ) {\n            arr.push( a[ i ] );\n          }\n        }\n        return arr;\n      },\n      getTime: function () {\n        return new Date()\n          .getTime();\n      },\n      updateVALAndHeaders: function ( token ) {\n        updateVALAndHeaders( token );\n      }\n    }; //end return\n  } ); //end\n","'use strict';\n/*\nNote: Make sure that you never overwrite the value service/object as a whole otherwise your assignment is lost.\nAlways reassign the property values of the value object.\nThe following assignment is wrong and does not lead to the expected behavior\n  user = response.data.user;\n\neven if the layout of the response matches the user value object exactly.\nWe have to do a mapping property by property, i.e\n  user.fullname = response.data.user.fullname;\n  user.role = response.data.user.role;\n  //etc.\n*/\nangular.module( _SERVICES_ )\n  .value( 'VAL', {\n    device: {\n      id: '0', //must be string device.uuid deviceId like 52548590-9962-4277-9C37-95C8A8A27B7C or c6da166c0838ef8e\n      //uid: 0, //server generated Id //need to store in SQLite\n      type: 'PH',\n      os: 'ANDROID',\n      osVer: '',\n      appId: '', //fixed size like ionic provide to each app settings.get('app_id') -OR- me.parakh.edu\n      verCode: '', //appBuild: 0, VersionCode(Android) Version(iOS) //build identifier of the app\n      verName: '' //appVersion: 0, VersionName(Android) Build(iOS) //version number of the current app running\n    },\n    claim: null, //user info\n    token: null,\n    firstLaunch: false,\n    isDevice: false,\n    data: {} //share data between controller\n  } );\n"],"sourceRoot":"/source/"}